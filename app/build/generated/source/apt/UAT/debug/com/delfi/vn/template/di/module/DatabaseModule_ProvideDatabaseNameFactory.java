// Generated by Dagger (https://dagger.dev).
package com.delfi.vn.template.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideDatabaseNameFactory implements Factory<String> {
  private final DatabaseModule module;

  public DatabaseModule_ProvideDatabaseNameFactory(DatabaseModule module) {
    this.module = module;
  }

  @Override
  public String get() {
    return provideDatabaseName(module);
  }

  public static DatabaseModule_ProvideDatabaseNameFactory create(DatabaseModule module) {
    return new DatabaseModule_ProvideDatabaseNameFactory(module);
  }

  public static String provideDatabaseName(DatabaseModule instance) {
    return Preconditions.checkNotNull(instance.provideDatabaseName(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
