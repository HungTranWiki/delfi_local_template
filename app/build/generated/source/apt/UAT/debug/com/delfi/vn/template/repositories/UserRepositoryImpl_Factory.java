// Generated by Dagger (https://dagger.dev).
package com.delfi.vn.template.repositories;

import com.delfi.vn.template.services.api.ApiRepositoryImpl;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserRepositoryImpl_Factory implements Factory<UserRepositoryImpl> {
  private final Provider<AppRepository> appRepositoryProvider;

  private final Provider<ApiRepositoryImpl> apiRepositoryImplProvider;

  public UserRepositoryImpl_Factory(Provider<AppRepository> appRepositoryProvider,
      Provider<ApiRepositoryImpl> apiRepositoryImplProvider) {
    this.appRepositoryProvider = appRepositoryProvider;
    this.apiRepositoryImplProvider = apiRepositoryImplProvider;
  }

  @Override
  public UserRepositoryImpl get() {
    return new UserRepositoryImpl(appRepositoryProvider.get(), apiRepositoryImplProvider.get());
  }

  public static UserRepositoryImpl_Factory create(Provider<AppRepository> appRepositoryProvider,
      Provider<ApiRepositoryImpl> apiRepositoryImplProvider) {
    return new UserRepositoryImpl_Factory(appRepositoryProvider, apiRepositoryImplProvider);
  }

  public static UserRepositoryImpl newInstance(AppRepository appRepository,
      ApiRepositoryImpl apiRepositoryImpl) {
    return new UserRepositoryImpl(appRepository, apiRepositoryImpl);
  }
}
