// Generated by Dagger (https://dagger.dev).
package com.delfi.vn.template.ui.base.screen;

import com.delfi.vn.template.ui.base.BaseActivity_MembersInjector;
import com.delfi.vn.template.utils.rxscheduler.SchedulerListener;
import dagger.MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseFeatureActivity_MembersInjector<P extends BaseFeaturePresenter> implements MembersInjector<BaseFeatureActivity<P>> {
  private final Provider<SchedulerListener> schedulerListenerProvider;

  public BaseFeatureActivity_MembersInjector(
      Provider<SchedulerListener> schedulerListenerProvider) {
    this.schedulerListenerProvider = schedulerListenerProvider;
  }

  public static <P extends BaseFeaturePresenter> MembersInjector<BaseFeatureActivity<P>> create(
      Provider<SchedulerListener> schedulerListenerProvider) {
    return new BaseFeatureActivity_MembersInjector<P>(schedulerListenerProvider);}

  @Override
  public void injectMembers(BaseFeatureActivity<P> instance) {
    BaseActivity_MembersInjector.injectSchedulerListener(instance, schedulerListenerProvider.get());
  }
}
