// Generated by Dagger (https://dagger.dev).
package com.delfi.vn.template.ui.base;

import com.delfi.vn.template.utils.rxscheduler.SchedulerListener;
import dagger.MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivity_MembersInjector<P extends BasePresenter> implements MembersInjector<BaseActivity<P>> {
  private final Provider<SchedulerListener> schedulerListenerProvider;

  public BaseActivity_MembersInjector(Provider<SchedulerListener> schedulerListenerProvider) {
    this.schedulerListenerProvider = schedulerListenerProvider;
  }

  public static <P extends BasePresenter> MembersInjector<BaseActivity<P>> create(
      Provider<SchedulerListener> schedulerListenerProvider) {
    return new BaseActivity_MembersInjector<P>(schedulerListenerProvider);}

  @Override
  public void injectMembers(BaseActivity<P> instance) {
    injectSchedulerListener(instance, schedulerListenerProvider.get());
  }

  public static <P extends BasePresenter> void injectSchedulerListener(BaseActivity<P> instance,
      SchedulerListener schedulerListener) {
    instance.schedulerListener = schedulerListener;
  }
}
